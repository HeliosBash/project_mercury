#!/bin/bash

while [ $# -gt 0 ] ; do
    case "$1" in
    --node*|-n*)
      if [[ "$1" != *=* ]]; then shift; fi # Value is next arg if no `=`
      node="${1#*=}"
      ;;
    --sourceid*|-i*)
      if [[ "$1" != *=* ]]; then shift; fi
      sid="${1#*=}"
      ;;
    --startdate*|-s*)
      if [[ "$1" != *=* ]]; then shift; fi
      startdate="${1#*=}"
      ;;
    --enddate*|-e*)
      if [[ "$1" != *=* ]]; then shift; fi
      enddate="${1#*=}"
      ;;
    --token*|-k*)
      if [[ "$1" != *=* ]]; then shift; fi
      token="${1#*=}"
      ;;
    --secret*|-c*)
      if [[ "$1" != *=* ]]; then shift; fi
      secret="${1#*=}"
      ;;
    --help|-h)
      printf "Usage: data-exporter --node|-n [NODE] --sourceid|-i [SOURCEID] --startdate|-s [START DATE IN YYYY-MM-DD]  --enddate|-e [END DATE IN YYYY-MM-DD] --token|-k [SOLNET TOKEN] --secret|-c [SOLNET SECRET]\n" # Flag argument
      exit 0
      ;;
    *)
      >&2 printf "Error: The following arguments are required --node --sourceid --startdate --enddate --token --secret \n"
      exit 1
      ;;
  esac
  shift
done

if [[ -z "$node" || -z "$sid" || -z "$startdate" || -z "$enddate" || -z "$token" || -z "$secret" ]] ; then

	 echo "$(date +'%Y-%m-%d %H:%M:%S') Error: The following arguments are required --node --sourceid --startdate --enddate --token --secret"  2>&1 | tee -a logs/data-export.log

else
	sourceids=$(echo $sid | sed "s/\//%2F/g")
	maxoutput=1000000
	rm -rf data/${node}_${sourceids}_${startdate}_${enddate}_data_export
	mkdir data/${node}_${sourceids}_${startdate}_${enddate}_data_export
	>data/${node}_${sourceids}_${startdate}_${enddate}_data_export.csv

	echo "$(date +'%Y-%m-%d %H:%M:%S') Scanning started for date range ${startdate} ${enddate}" 2>&1 | tee -a logs/data-export.log
	loopstartdate=$startdate
	loopenddate=$(date -d "$enddate + 1 day" "+%Y-%m-%d")
	while [ "$loopstartdate" != "$loopenddate" ]; do 
  
		for hours in $(seq -f "%02g" 0 23)
		do
		
			starttime="${loopstartdate}T${hours}%3A00"
			endtime="${loopstartdate}T${hours}%3A59"
		
			echo "$(date +'%Y-%m-%d %H:%M:%S') Exporting data between $starttime $endtime" 2>&1 | tee -a logs/data-export.log
			echo "$(date +'%Y-%m-%d %H:%M:%S') Executing python3 solnet_query_local.py --node $node --sourceids $sourceids --localstartdate $starttime --localenddate $endtime --aggregate None --maxoutput $maxoutput --token $token --secret $secret" 2>&1 | tee -a logs/data-export.log
		
			python3 solnet_query_local.py --node $node --sourceids $sourceids --localstartdate $starttime --localenddate $endtime --aggregate None --maxoutput $maxoutput --token $token --secret $secret > data/${node}_${sourceids}_${startdate}_${enddate}_data_export/${node}_${sourceids}_${starttime}_${endtime}_data.csv

			sed -i '1d' data/${node}_${sourceids}_${startdate}_${enddate}_data_export/${node}_${sourceids}_${starttime}_${endtime}_data.csv
			#filecount=$(cat data/${node}_${sourceids}_${startdate}_${enddate}_data_export/${node}_${sourceids}_${starttime}_${endtime}_data.csv | wc -l )
			#echo "$(date +'%Y-%m-%d %H:%M:%S') Executing python3 solnet_expire_preview.py --node $node --sourceids $sourceids --localstartdate $starttime --localenddate $endtime --token $token --secret $secret" 2>&1 | tee -a logs/data-export.log
			#expirecount=$(python3 solnet_expire_preview.py --node $node --sourceids $sourceids --localstartdate $starttime --localenddate $endtime --token $token --secret $secret)	
			cat data/${node}_${sourceids}_${startdate}_${enddate}_data_export/${node}_${sourceids}_${starttime}_${endtime}_data.csv >> data/${node}_${sourceids}_${startdate}_${enddate}_data_export.csv
			#echo "${starttime},${endtime},$filecount,$expirecount" 2>&1 | tee -a data/${node}_${sourceids}_${startdate}_${enddate}_data_export/${node}_${sourceids}_count.log
			sleep 2
		done
		loopstartdate=$(date -d "$loopstartdate + 1 day" "+%Y-%m-%d")	
	done

	echo "$(date +'%Y-%m-%d %H:%M:%S') Scanning ended for date range ${startdate} ${enddate}" 2>&1 | tee -a logs/data-export.log
fi
